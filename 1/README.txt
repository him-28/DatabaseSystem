Η εργασία παραδόθηκε από:

Νικόλαος Λιάππας ΑΜ : 1115200800092

Γλώσσα υλοποίησης: C

Περιβάλλον υλοποίησης: Linux (gcc 4.3+)

Αρχεία προς παράδοση : BF.h , BF.o , HP.c , HP.h , main1.c , main2.c , Record.h , Sorted.c , Sorted.h.

Μεταγλώτιση και εκτέλεση κώδικα :
gcc -o m1 HP.c Sorted.c main1.c BF.o && ./m1
gcc -o m2 HP.c Sorted.c main2.c BF.o && ./m2

Επίσης παραδίδουμε και κάποια πηγαία αρχεία που μας βοήθησαν στον έλεγχο των ασκήσεων. Αυτα είναι :
main1_onlyHP.c , main2_onlyHP.c , main1_onlySorted.c , main2_onlySorted.c , testforhp.c , testforsorted.c

Η main1_onlyHP.c είναι η αρχική main1 έχοντας αφαιρέσει όλα τα κομάτια που αφορούν το sorted κομάτι.
Η main2_onlyHP.c είναι η αρχική main2 έχοντας αφαιρέσει όλα τα κομάτια που αφορούν το sorted κομάτι.
Με αυτόν τον τρόπο μπορούμε να ελέγξουμε όλες τις συναρτήσεις HP.

Η main1_onlySorted.c είναι η αρχική main1 έχοντας αφαιρέσει όλα τα κομάτια που αφορούν το HP κομάτι.
Η main2_onlySorted.c είναι η αρχική main2 έχοντας αφαιρέσει όλα τα κομάτια που αφορούν το HP κομάτι.
Με αυτόν τον τρόπο μπορούμε να ελέγξουμε όλες τις συναρτήσεις Sorted.


Οι 2 συναρτήσεις test είναι δικές μας συναρτήσεις που μας βοήθησαν να τεστάρουμε την εργασία μας.

Επίσης, όσον αφορά τις main2 επειδή μας έβγαζε warnings στην κλήση των συναρτήσεων με id καποιον αριθμό
βάζουμε έναν int x; και κάθε φορά καλούμε τις συναρτήσεις με &χ. Για παράδειγμα :
	x=12;
	if ( HP_DeleteEntry (fdhp1, "id", &x) < 0)
	{
		  BF_PrintError("Error deleting record in file hp1");
		  HP_CloseFile(fdhp1);
		  return -1;
	} 


Πληροφορίες που αφορούν την υλοποίηση των HP συναρτήσεων :

Σαν πληροφορία metadata δίνουμε το h για να ξεχωρίζουν τα αρχεία σωρού από τα ταξινομημένα αρχεία.
Οι συναρτήσεις HP δουλεύουν όλες σωστά. Η delete κάνει ολισθήσεις και με αυτόν τον τρόπο διαγράφει τις διάφορες
εγγραφές.Η insert εισάγει τις εγγραφές κανονικά σε αρχείο σωρου.Στην αρχή κάθε block κρατάμε εναν int για να ξέρουμε πόσες εγγραφές εχουμε μέσα.
Η Get κανει σειριακή αναζήτηση και μας εμφανίζει τις εγγραφές που ζητάμε.

Πληροφορίες που αφορούν την υλοποίηση των Sorted συναρτήσεων :

Σαν πληροφορία metadata δίνουμε το s για να ξεχωρίζουν τα ταξινομημένα αρχεία από τα αρχεία σωρού.
Οι συναρτήσεις Sorted δουλεύουν όλες σωστά εκτός απο την insert.
Η delete κάνει ολισθήσεις και με αυτόν τον τρόπο συνεχίζουμε να κρατάμε ταξινομημένο το αρχείο μας.
Η get κάνει δυαδική αναζήτηση σε περίπτωση που ψάχνει για id. Έχουμε θεωρήσει και τις περιπτώσεις να 
υπάρχουν ίδιες εγγραφές σε γειτονικά block. Έτσι σαρώνουμε τα γειτονικά block όσο βρίσκουμε εγγραφές
που ζητάμε.Κινούμαστε και αριστερά και δεξιά για να καλύψουμε όλες τις περιπτώσεις.Έτσι αν μας δώσουν 
ένα αρχείο με εγγραφές που έχουν όλες το ίδιο id πρέπει να διαβάσουμε όλα τα block και να τυπώσουμε όλες 
τις εγγραφές. Η δυαδική αναζήτηση γίνεται σε επίπεδο block.
Όσον αφορα την insert, η συνάρτηση αυτή έχει υλοποιηθεί αναδρομικά και λειτουργεί με ολισθήσεις.Δεν είναι σωστή καθώς παρουσιάζει
προβλήματα και μας πετάει segfault.Αν όμως έχουμε ας πουμε ένα αρχείο με εγγραφες με id 1,2,3,4,5,7,8,9,
10,11,12,13,14,15,16 και θέλουμε να εισάγουμε εγγραφή με id 6 τότε θα δουλέψει σωστά και θα την εισάγει στην σωστή θέση.
Αυτη δοκιμή έγινε με την testforsorted.c.
Επίσης δουλευει σωστα αν εισάγουμε λίγες εγγραφές καθώς μετά απο κάποιο αριθμό εγγραφών εμφανίζει segfault.

-----------------------------------------------------------------------------------------------------------------------------
